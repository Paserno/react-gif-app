{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qLAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAiB5C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAoBO,OACtCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAM,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACZC,EADY,iDACqCC,UAAUH,GAD/C,+DAECI,MAAMF,GAFP,cAEZG,EAFY,gBAGKA,EAAKC,OAHV,uBAGVC,EAHU,EAGVA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATxB,kBAcXM,GAdW,4CAAH,sDCANO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIjC,OACI,sBAAKc,UAAU,uDAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,kCAAKA,EAAL,WCJCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAsBtC,OAfAC,qBAAU,WAENxB,EAAOC,GACFwB,MAAK,SAAAC,GAEFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKtB,CAACpB,IAGGqB,EDlB0BK,CAAa1B,GAAjCa,EAHwB,EAG7BN,KAAaa,EAHgB,EAGhBA,QAYrB,OACI,qCACI,oBAAIJ,UAAU,kDAAd,SAAiEhB,IAE/DoB,GAAW,mBAAGJ,UAAU,qDAAb,qBAEb,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEKtBgB,EAhCM,WAAO,IAAD,EAGazC,mBAAS,CAAC,SAHvB,mBAGhB0C,EAHgB,KAGJ3C,EAHI,KAUvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCnBjC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b374cfa9.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault(); // Evita el refresh de toda la pagina\r\n\r\n        if( inputValue.trim().length > 2 ){\r\n            setCategories(cats => [ inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n        \r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    // .func de funcion es requerida\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGif = async ( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=fom8J2Gk6HSbvB8qZ4FpKEJCiaZg7H0Q`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n\r\n    });\r\n\r\n    return gifs;\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title, url} ) => {\r\n\r\n    // console.log(id, title, url);\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn animate__slow\">\r\n            <img src={url} alt={title}/>\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n// import { getGif } from '../helpers/getGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n    const { data:images, loading } = useFetchGifs(category);\r\n\r\n\r\n    // useEffect(() => {\r\n    //     getGif( category )\r\n    //         .then( imgs => setImages(imgs));\r\n    // }, [ category ]) // un Arreglo vacio, se va a disparar una sola vez del useEffect\r\n\r\n\r\n\r\n    // getGif()\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn animate__slow\">{category}</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash animate__infinite\">Loading</p>}\r\n\r\n            <div className=\"card-grid\">\r\n\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGif } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGif(category)\r\n            .then(imgs => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n\r\n\r\n            });\r\n    }, [category])\r\n\r\n\r\n    return state;\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    \r\n    const [categories, setCategories] = useState(['Goku']);\r\n\r\n    // const handleAdd = () =>{\r\n    //     // setCategories([...categories, 'Spiderman']);\r\n    //     setCategories(cats => [...cats, 'Spiderman']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>Gif Pasernin</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n\r\n\r\n            <ol>\r\n                { \r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category}/>\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n\n);\n\n// GifExpertApp\n"],"sourceRoot":""}